// <auto-generated />
namespace Microsoft.AspNetCore.Components.Analyzers
{
    using System.Globalization;
    using System.Reflection;
    using System.Resources;

    internal static class Resources
    {
        public static readonly ResourceManager ResourceManager
            = new ResourceManager("Microsoft.AspNetCore.Components.Analyzers.Resources", typeof(Resources).GetTypeInfo().Assembly);

        /// <summary>
        /// Component parameters should not have public setters.
        /// </summary>
        internal static string ComponentParametersShouldNotBePublic_Description
        {
            get => GetString("ComponentParametersShouldNotBePublic_Description");
        }

        /// <summary>
        /// Component parameters should not have public setters.
        /// </summary>
        internal static string FormatComponentParametersShouldNotBePublic_Description()
            => GetString("ComponentParametersShouldNotBePublic_Description");

        /// <summary>
        /// Make component parameter private
        /// </summary>
        internal static string ComponentParametersShouldNotBePublic_FixTitle
        {
            get => GetString("ComponentParametersShouldNotBePublic_FixTitle");
        }

        /// <summary>
        /// Make component parameter private
        /// </summary>
        internal static string FormatComponentParametersShouldNotBePublic_FixTitle()
            => GetString("ComponentParametersShouldNotBePublic_FixTitle");

        /// <summary>
        /// Component parameter '{0}' has a public setter, but component parameters should not be publicly settable.
        /// </summary>
        internal static string ComponentParametersShouldNotBePublic_Format
        {
            get => GetString("ComponentParametersShouldNotBePublic_Format");
        }

        /// <summary>
        /// Component parameter '{0}' has a public setter, but component parameters should not be publicly settable.
        /// </summary>
        internal static string FormatComponentParametersShouldNotBePublic_Format(object p0)
            => string.Format(CultureInfo.CurrentCulture, GetString("ComponentParametersShouldNotBePublic_Format"), p0);

        /// <summary>
        /// Component parameter has public setter
        /// </summary>
        internal static string ComponentParametersShouldNotBePublic_Title
        {
            get => GetString("ComponentParametersShouldNotBePublic_Title");
        }

        /// <summary>
        /// Component parameter has public setter
        /// </summary>
        internal static string FormatComponentParametersShouldNotBePublic_Title()
            => GetString("ComponentParametersShouldNotBePublic_Title");

        /// <summary>
        /// Components may only define a single parameter with CaptureExtraAttribute.
        /// </summary>
        internal static string ComponentCaptureExtraAttributesParameterMustBeUnique_Description
        {
            get => GetString("ComponentCaptureExtraAttributesParameterMustBeUnique_Description");
        }

        /// <summary>
        /// Components may only define a single parameter with CaptureExtraAttribute.
        /// </summary>
        internal static string FormatComponentCaptureExtraAttributesParameterMustBeUnique_Description()
            => GetString("ComponentCaptureExtraAttributesParameterMustBeUnique_Description");

        /// <summary>
        /// Component type '{0}' defines properties multiple properties ('{1}') with CaptureExtraAttribute.
        /// </summary>
        internal static string ComponentCaptureExtraAttributesParameterMustBeUnique_Format
        {
            get => GetString("ComponentCaptureExtraAttributesParameterMustBeUnique_Format");
        }

        /// <summary>
        /// Component type '{0}' defines properties multiple properties ('{1}') with CaptureExtraAttribute.
        /// </summary>
        internal static string FormatComponentCaptureExtraAttributesParameterMustBeUnique_Format(object p0, object p1)
            => string.Format(CultureInfo.CurrentCulture, GetString("ComponentCaptureExtraAttributesParameterMustBeUnique_Format"), p0, p1);

        /// <summary>
        /// Component has multiple CaptureExtraAttribute parameters
        /// </summary>
        internal static string ComponentCaptureExtraAttributesParameterMustBeUnique_Title
        {
            get => GetString("ComponentCaptureExtraAttributesParameterMustBeUnique_Title");
        }

        /// <summary>
        /// Component has multiple CaptureExtraAttribute parameters
        /// </summary>
        internal static string FormatComponentCaptureExtraAttributesParameterMustBeUnique_Title()
            => GetString("ComponentCaptureExtraAttributesParameterMustBeUnique_Title");

        /// <summary>
        /// Component parameters with CapatureExtraAttributes must be a correct type.
        /// </summary>
        internal static string ComponentCaptureExtraAttributesParameterHasWrongType_Description
        {
            get => GetString("ComponentCaptureExtraAttributesParameterHasWrongType_Description");
        }

        /// <summary>
        /// Component parameters with CapatureExtraAttributes must be a correct type.
        /// </summary>
        internal static string FormatComponentCaptureExtraAttributesParameterHasWrongType_Description()
            => GetString("ComponentCaptureExtraAttributesParameterHasWrongType_Description");

        /// <summary>
        /// Component parameter '{0}' defines CapatureExtraAttributes but has an unsupported type '{1}'. Use a type assignable from '{2}'.
        /// </summary>
        internal static string ComponentCaptureExtraAttributesParameterHasWrongType_Format
        {
            get => GetString("ComponentCaptureExtraAttributesParameterHasWrongType_Format");
        }

        /// <summary>
        /// Component parameter '{0}' defines CapatureExtraAttributes but has an unsupported type '{1}'. Use a type assignable from '{2}'.
        /// </summary>
        internal static string FormatComponentCaptureExtraAttributesParameterHasWrongType_Format(object p0, object p1, object p2)
            => string.Format(CultureInfo.CurrentCulture, GetString("ComponentCaptureExtraAttributesParameterHasWrongType_Format"), p0, p1, p2);

        /// <summary>
        /// Component parameter with CaptureExtraAttribute has the wrong type
        /// </summary>
        internal static string ComponentCaptureExtraAttributesParameterHasWrongType_Title
        {
            get => GetString("ComponentCaptureExtraAttributesParameterHasWrongType_Title");
        }

        /// <summary>
        /// Component parameter with CaptureExtraAttribute has the wrong type
        /// </summary>
        internal static string FormatComponentCaptureExtraAttributesParameterHasWrongType_Title()
            => GetString("ComponentCaptureExtraAttributesParameterHasWrongType_Title");

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = ResourceManager.GetString(name);

            System.Diagnostics.Debug.Assert(value != null);

            if (formatterNames != null)
            {
                for (var i = 0; i < formatterNames.Length; i++)
                {
                    value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
                }
            }

            return value;
        }
    }
}
